"""Подвиг 1. В программе определите три следующие переменные:

a = 7
b = -4
c = 3
Выведите в консоль их значения, используя одну функцию print
(между значениями переменных должен стоять один пробел).
# put your python code here
a = 7
b = -4
c = 3

print(f'{a}, {b}, {c}')
"""

"""s1 = "Hello"
s2 = "Balakirev"

print(s1, end=" ")
print(s2)"""

# ввод данных
# s1, s2 = map(str, input().split())
# print(f'Word 1: {s1} ',f' Word 2: {s2}',sep='|')

"""Подвиг 5. Напишите программу, в которой вводятся два
 целых положительных числа и в консоль выводится результат 
 возведения первого числа в степень второго."""

# n, m = map(int, input().split())
# print(n**m)


"""Подвиг 8. Напишите программу, 
которая принимает на вход два вещественных 
числа в одну строку через пробел и выводит на экран их сумму."""

# put your python code here
# n, m = map(float, input().split())
# print(n+m)


"""Подвиг 9. В магазине продается 
X синих ручек, Y зеленых, черных в два 
раза больше, чем синих, а красных в четыре 
раза больше зеленых. Напишите программу, в которой 
вводятся целые значения X, Y в одну строку 
через пробел с помощью команды:

# put your python code here
X, Y = map(int, input().split())
black = 2 * X
red = Y * 4
result = X + Y + red + black
print(result)"""

"""Подвиг 10. Вводятся длина и ширина прямоугольника (каждое
 вещественное значение с новой строки). Необходимо вычислить
  его периметр (сумму длин сторон) и результат вывести на экран."""

# put your python code here
# n, m = float(input()),float(input())
# per = (n + m)*2
# print(per)


# X, Y = map(int, input().split())"""


"""Подвиг 11. Напишите программу
вывода переменной math.pi с точностью
до тысячных (три знака после запятой)"""

# put your python code here
import math

# p = round(math.pi, 3)
# print(p)


"""Подвиг 12. Составить программу вывода на экран
вещественного числа, вводимого с клавиатуры.
Выводимому числу должно предшествовать
сообщение "Вы ввели число" (без кавычек)."""

# put your python code here
# a = float(input())
# print(f'Вы ввели число {a}')

# a = float(input(1.2))
# print((0 <= a <= 2) or (10 <= a <= 20))

# a = float(input())
# print((a >= 0 and a <= 2) or (a >= 10 and a <= 20))

# print("кот" > "Кот")

# a = str(input())
# b = str(input())

# c = a + " " + b
# print(c)

# a = (1+2)
# b=('7'+'8')

# print(a)
# print(b)

# c = a * b
# print(c)


# a, b = map(str,input().split())
# c = (a + " ")*2 + (b + " ")*3
# print(c)

# a, b = map(str,input().split())
# d = f"Переменная а = {a}" + ", " + f"переменная b = {b}"
# print(d)

# v = str(input())
# "Строка: <введенная строка>. Длина: <длина строки>".
# a = "Строка:" + " " + v + ". "

# b = "Длина:"

# c = len(v)

# n = a + b + " " + str(c)
# print(n)


"""Подвиг 10. Написать программу ввода двух слов
 (через пробел в одну строчку). 
 Определить булевы значения для оператора in 
 проверки вхождения первого слова во второе. А
  также для операторов ==, >, <. Все булевы 
  значения объединить в одну строку через 
  пробел и вывести на экран.

Sample Input:

hello python
Sample Output:

False False False True"""

# a, b = map(str, input().split())
# c = a in b
# d = a == b
# e = a > b
# r = a < b

# print(c, d, e, r)


"""Подвиг 11. С клавиатуры 
вводятся две буквы (в одну строку через пробел). 
Вывести на экран следующую строку:

"Коды: <буква1> = <код буквы1>,
 <буква2> = <код буквы2>"

Sample Input:

a z
Sample Output:

Коды: a = 97, z = 122"""

# a, b = map(str, input().split())
# g = 97
# v = 122
# x = f"Коды: {a} = {g}, {b} = {v}"
# print(x)
# второе решение
# a, b = map(str, input().split())
# print(f"Коды: {a} = {ord(a)}, {b} = {ord(b)}")


"""Подвиг 2. Вводится строка из целых чисел через пробел.
Если первое число не равно последнему, то нужно добавить
значение True, а иначе - значение False. Результирующий
список lst вывести на экран командой:)
Решение:
lst = list(input().split())
if lst[0] != lst[-1]:
    lst.append(True)
else:
    lst.append(False)
print(*lst)"""




"""Подвиг 4. Вводится строка с номером телефона в формате: 

+7(xxx)xxx-xx-xx

Необходимо преобразовать ее в 
список lst (посимвольно, то есть,
 элементами списка будут являться отдельные 
символы строки). Затем, удалить первый '+', число 
7 заменить на 8 и убрать дефисы. Отобразить 
полученный список на экране командой:

print("".join(lst))"""
# Решение

# put your python code here
#lst = list(input())
#lst.pop(0)
#lst.remove("7")
#lst.remove("-")
#lst.remove("-")
#lst.insert(0, '8')
#print("".join(lst))


""" Подвиг 5. В одну строчку через пробел вводятся: 
имя, отчество и фамилия. Необходимо представить эти 
данные в виде новой строки в формате: Фамилия И.О. 
(Например, Сергей Михайлович Балакирев -> Балакирев С.М.).

Sample Input:

Сергей Михайлович Балакирев
Sample Output:

Балакирев С.М."""

# Решение работает, но тренажер не пускает
# put your python code here
"""lst = str(input())
name = lst[0:1]
lastname = lst[7:8]
otc = lst[17:]
f = f'{otc} {name}. {lastname}.'
print(f)

#второй вариант, который прошел
a,s,d = input().split()
print(f"{d} {a[0]}.{s[0]}.")"""


"""  Подвиг 7. Вводятся целые
 числа в одну строчку через пробел 
 (не менее четырех). Необходимо найти 
 три наименьших числа в этой последовательности 
 чисел и вывести их на экран в порядке возрастания. 
 Реализовать программу без использования условного оператора.

Sample Input:

8 11 -5 10 -1 0 7
Sample Output:

-5 -1 0 """

# put your python code here
"""s = list(map(int, input().split()))
f = list(s)
f.sort()
print(*f[:3])


# put your python code here
# put your python code here
s = list(map(int, input().split()))
lst = list(s)
print(lst)
if lst.pop(5) == '1, 3, 5, 7, 9':
    lst.append('True')
else:
    lst.append('False')

# это верное решение
lst = list(map(int, input().split()))
lst.append((lst.pop()) % 2 != 0)
print(*lst)"""

""""
a = float(input())
if a <= 60:
    print(1)
elif 60 < a <= 64:
    print(2)
elif 64 < a <= 69:
    print(3)
else:
    print(4)"""

"""m = int(input())
if m == 1:
    print("понедельник")
elif m == 2:
    print("вторник")
elif m == 3:
    print("среда")
elif m == 4:
    print("четверг")
elif m == 5:
    print("пятница")
elif m == 6:
    print("суббота")
elif m == 7:
    print("воскресенье")"""

"""# put your python code here
m = int(input())
year = {"1": "31",
        "2": "28",
        "3": "31",
        "4": "30",
        "5": "31",
        "6": "30",
        "7": "31",
        "8": "31",
        "9": "30",
        "10": "31",
        "11": "30",
        "13": "31"}

if m in year["m"]:
#a = year.get("2")
    print("m")"""


"""
Подвиг 5. Вводится порядковый номер месяца (1, 2, ..., 12). 
Вывести на экран количество дней в этом месяце. Принять, 
что год не является високосным. Реализовать через условный 
оператор, в котором следует использовать 
не более трех ветвей (блоков).

P.S. Число дней в месяцах не високосного года, 
начиная с января: 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31
решение через словарь

m = input()
year = {"1": "31",
        "2": "28",
        "3": "31", 
        "4": "30", 
        "5": "31", 
        "6": "30", 
        "7": "31", 
        "8": "31", 
        "9": "30", 
        "10": "31", 
        "11": "30", 
        "12": "31"}
        
for i in m:
    if i in year.keys():
        print(year[i], end='')
        
вторая версия кода        
a = int(input())
t = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]
if 1 <= a <= 12:
    a = t[a - 1]
    print(a)
else:
    print("Вообще не месяц")
"""


"""
Подвиг 6. Дата некоторого дня характеризуется двумя натуральными числами:
 m (порядковый номер месяца) и n (число). По введенным m и n 
 (в одну строку через пробел) определить:

а) дату предыдущего дня (принять, что m и n не характеризуют 1 января);
б) дату следующего дня (принять, что m и n не характеризуют 31 декабря).

В задаче принять, что год не является високосным. Вывести предыдущую 
дату и следующую дату (в формате: mm.dd, где m - число месяца; d - н
омер дня) в одну строчку через пробел.

P.S. Число дней в месяцах не високосного года, начиная с 
января: 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31

Sample Input:

8 31
Sample Output:

08.30 09.01
Это решение -  вынос мозга!!!

# put your python code here
# put your python code here
days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]
b, a = map(int, input().split())
if a == 1:
    pday = days[b-2]
    pmh = b - 1
    fday = 2
    fmh = b
elif a == days[b-1]:
    pday = a-1
    pmh = b
    fday = 1
    fmh = b+1
else:
    pday = a-1
    pmh = b
    fday = a+1
    fmh = b
print(f"{str(pmh).rjust(2, '0')}.{str(pday).rjust(2, '0')} {str(fmh).rjust(2, '0')}.{str(fday).rjust(2, '0')}")

"""
"""
Подвиг 7. Вводится целое число k (1 <= k <= 365). Определить, каким днем 
недели (понедельник, вторник, среда, четверг, 
пятница, суббота или воскресенье) является k-й день 
не високосного года, в котором 1 января является понедельником.



b = int(input())
a = b % 7

if a == 1:
    print("понедельник")
elif a == 2:
    print("вторник")
elif a == 3:
    print("среда")
elif a == 4:
    print("четверг")
elif a == 5:
    print("пятница")
elif a == 6:
    print("суббота")
elif a == 7:
    print("воскресенье")
"""


# Наичнаем тернарные операторы
"""
Подвиг 1. Вводится два вещественных числа, каждое с 
новой строки. Необходимо с помощью тернарного условного 
оператора наибольшее значение присвоить переменной d и 
вывести ее на экран.


a = float(input())
b = float(input())

d = a if a > b else b
print(d)

"""

#a = int(input())
#msg = print("четное") if a // 3 == 0 else print("не четное")

#a = int(input())
#msg = print("кратно 3") if a % 3 == 0 else print("не кратно 3")


"""Подвиг 3. Вводится слово. Переменной msg присвоить строку "палиндром", 
если введенное слово является палиндромом (одинаково читается и вперед 
и назад), а иначе присвоить строку "не палиндром". Проверку проводить 
без учета регистра. Программу реализовать с помощью тернарного условного 
оператора. Значение переменной msg отобразить на экране.

a = str(input())
b = str.lower(a)
msg = print("палиндром") if b == b[::-1] else print("не палиндром")
print(b[::-1])
"""
